// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: foo.proto

#ifndef PROTOBUF_INCLUDED_foo_2eproto
#define PROTOBUF_INCLUDED_foo_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_foo_2eproto 

namespace protobuf_foo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_foo_2eproto
namespace Example {
class OSDCanvas;
class OSDCanvasDefaultTypeInternal;
extern OSDCanvasDefaultTypeInternal _OSDCanvas_default_instance_;
class OsdLine;
class OsdLineDefaultTypeInternal;
extern OsdLineDefaultTypeInternal _OsdLine_default_instance_;
class OsdPrimitive;
class OsdPrimitiveDefaultTypeInternal;
extern OsdPrimitiveDefaultTypeInternal _OsdPrimitive_default_instance_;
class OsdRect;
class OsdRectDefaultTypeInternal;
extern OsdRectDefaultTypeInternal _OsdRect_default_instance_;
class OsdString;
class OsdStringDefaultTypeInternal;
extern OsdStringDefaultTypeInternal _OsdString_default_instance_;
class PFoo;
class PFooDefaultTypeInternal;
extern PFooDefaultTypeInternal _PFoo_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class Size;
class SizeDefaultTypeInternal;
extern SizeDefaultTypeInternal _Size_default_instance_;
}  // namespace Example
namespace google {
namespace protobuf {
template<> ::Example::OSDCanvas* Arena::CreateMaybeMessage<::Example::OSDCanvas>(Arena*);
template<> ::Example::OsdLine* Arena::CreateMaybeMessage<::Example::OsdLine>(Arena*);
template<> ::Example::OsdPrimitive* Arena::CreateMaybeMessage<::Example::OsdPrimitive>(Arena*);
template<> ::Example::OsdRect* Arena::CreateMaybeMessage<::Example::OsdRect>(Arena*);
template<> ::Example::OsdString* Arena::CreateMaybeMessage<::Example::OsdString>(Arena*);
template<> ::Example::PFoo* Arena::CreateMaybeMessage<::Example::PFoo>(Arena*);
template<> ::Example::Point* Arena::CreateMaybeMessage<::Example::Point>(Arena*);
template<> ::Example::Size* Arena::CreateMaybeMessage<::Example::Size>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Example {

enum PrimType {
  STRING = 0,
  RECT = 1,
  LINE = 2
};
bool PrimType_IsValid(int value);
const PrimType PrimType_MIN = STRING;
const PrimType PrimType_MAX = LINE;
const int PrimType_ARRAYSIZE = PrimType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrimType_descriptor();
inline const ::std::string& PrimType_Name(PrimType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrimType_descriptor(), value);
}
inline bool PrimType_Parse(
    const ::std::string& name, PrimType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrimType>(
    PrimType_descriptor(), name, value);
}
enum Color {
  RED = 0,
  BLUE = 1,
  GREEN = 2,
  YELLOW = 3
};
bool Color_IsValid(int value);
const Color Color_MIN = RED;
const Color Color_MAX = YELLOW;
const int Color_ARRAYSIZE = Color_MAX + 1;

const ::google::protobuf::EnumDescriptor* Color_descriptor();
inline const ::std::string& Color_Name(Color value) {
  return ::google::protobuf::internal::NameOfEnum(
    Color_descriptor(), value);
}
inline bool Color_Parse(
    const ::std::string& name, Color* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Color>(
    Color_descriptor(), name, value);
}
enum LineType {
  DOTTED = 0,
  SOLID = 1,
  DOUBLE_SOLID = 2,
  DOUBLE_DOTTED = 3
};
bool LineType_IsValid(int value);
const LineType LineType_MIN = DOTTED;
const LineType LineType_MAX = DOUBLE_DOTTED;
const int LineType_ARRAYSIZE = LineType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LineType_descriptor();
inline const ::std::string& LineType_Name(LineType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LineType_descriptor(), value);
}
inline bool LineType_Parse(
    const ::std::string& name, LineType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LineType>(
    LineType_descriptor(), name, value);
}
// ===================================================================

class PFoo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.PFoo) */ {
 public:
  PFoo();
  virtual ~PFoo();

  PFoo(const PFoo& from);

  inline PFoo& operator=(const PFoo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PFoo(PFoo&& from) noexcept
    : PFoo() {
    *this = ::std::move(from);
  }

  inline PFoo& operator=(PFoo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PFoo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PFoo* internal_default_instance() {
    return reinterpret_cast<const PFoo*>(
               &_PFoo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PFoo* other);
  friend void swap(PFoo& a, PFoo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PFoo* New() const final {
    return CreateMaybeMessage<PFoo>(NULL);
  }

  PFoo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PFoo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PFoo& from);
  void MergeFrom(const PFoo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PFoo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float z = 1;
  int z_size() const;
  void clear_z();
  static const int kZFieldNumber = 1;
  float z(int index) const;
  void set_z(int index, float value);
  void add_z(float value);
  const ::google::protobuf::RepeatedField< float >&
      z() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_z();

  // @@protoc_insertion_point(class_scope:Example.PFoo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< float > z_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OSDCanvas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.OSDCanvas) */ {
 public:
  OSDCanvas();
  virtual ~OSDCanvas();

  OSDCanvas(const OSDCanvas& from);

  inline OSDCanvas& operator=(const OSDCanvas& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OSDCanvas(OSDCanvas&& from) noexcept
    : OSDCanvas() {
    *this = ::std::move(from);
  }

  inline OSDCanvas& operator=(OSDCanvas&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OSDCanvas& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OSDCanvas* internal_default_instance() {
    return reinterpret_cast<const OSDCanvas*>(
               &_OSDCanvas_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(OSDCanvas* other);
  friend void swap(OSDCanvas& a, OSDCanvas& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OSDCanvas* New() const final {
    return CreateMaybeMessage<OSDCanvas>(NULL);
  }

  OSDCanvas* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OSDCanvas>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OSDCanvas& from);
  void MergeFrom(const OSDCanvas& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OSDCanvas* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Example.OsdPrimitive primitives = 1;
  int primitives_size() const;
  void clear_primitives();
  static const int kPrimitivesFieldNumber = 1;
  ::Example::OsdPrimitive* mutable_primitives(int index);
  ::google::protobuf::RepeatedPtrField< ::Example::OsdPrimitive >*
      mutable_primitives();
  const ::Example::OsdPrimitive& primitives(int index) const;
  ::Example::OsdPrimitive* add_primitives();
  const ::google::protobuf::RepeatedPtrField< ::Example::OsdPrimitive >&
      primitives() const;

  // @@protoc_insertion_point(class_scope:Example.OSDCanvas)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Example::OsdPrimitive > primitives_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(NULL);
  }

  Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Example.Point)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Size : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.Size) */ {
 public:
  Size();
  virtual ~Size();

  Size(const Size& from);

  inline Size& operator=(const Size& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Size(Size&& from) noexcept
    : Size() {
    *this = ::std::move(from);
  }

  inline Size& operator=(Size&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Size& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Size* internal_default_instance() {
    return reinterpret_cast<const Size*>(
               &_Size_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Size* other);
  friend void swap(Size& a, Size& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Size* New() const final {
    return CreateMaybeMessage<Size>(NULL);
  }

  Size* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Size>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Size& from);
  void MergeFrom(const Size& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Size* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Example.Size)
 private:
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OsdString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.OsdString) */ {
 public:
  OsdString();
  virtual ~OsdString();

  OsdString(const OsdString& from);

  inline OsdString& operator=(const OsdString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OsdString(OsdString&& from) noexcept
    : OsdString() {
    *this = ::std::move(from);
  }

  inline OsdString& operator=(OsdString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OsdString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OsdString* internal_default_instance() {
    return reinterpret_cast<const OsdString*>(
               &_OsdString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(OsdString* other);
  friend void swap(OsdString& a, OsdString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OsdString* New() const final {
    return CreateMaybeMessage<OsdString>(NULL);
  }

  OsdString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OsdString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OsdString& from);
  void MergeFrom(const OsdString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OsdString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // required int32 size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  static const int kStringFieldNumber = 5;
  static ::google::protobuf::internal::ExtensionIdentifier< ::Example::OsdPrimitive,
      ::google::protobuf::internal::MessageTypeTraits< ::Example::OsdString >, 11, false >
    string;
  // @@protoc_insertion_point(class_scope:Example.OsdString)
 private:
  void set_has_message();
  void clear_has_message();
  void set_has_size();
  void clear_has_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OsdLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.OsdLine) */ {
 public:
  OsdLine();
  virtual ~OsdLine();

  OsdLine(const OsdLine& from);

  inline OsdLine& operator=(const OsdLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OsdLine(OsdLine&& from) noexcept
    : OsdLine() {
    *this = ::std::move(from);
  }

  inline OsdLine& operator=(OsdLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OsdLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OsdLine* internal_default_instance() {
    return reinterpret_cast<const OsdLine*>(
               &_OsdLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(OsdLine* other);
  friend void swap(OsdLine& a, OsdLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OsdLine* New() const final {
    return CreateMaybeMessage<OsdLine>(NULL);
  }

  OsdLine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OsdLine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OsdLine& from);
  void MergeFrom(const OsdLine& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OsdLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Example.Point position2 = 1;
  bool has_position2() const;
  void clear_position2();
  static const int kPosition2FieldNumber = 1;
  private:
  const ::Example::Point& _internal_position2() const;
  public:
  const ::Example::Point& position2() const;
  ::Example::Point* release_position2();
  ::Example::Point* mutable_position2();
  void set_allocated_position2(::Example::Point* position2);

  // required int32 weight = 2;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // required .Example.LineType line_type = 3;
  bool has_line_type() const;
  void clear_line_type();
  static const int kLineTypeFieldNumber = 3;
  ::Example::LineType line_type() const;
  void set_line_type(::Example::LineType value);

  static const int kLineFieldNumber = 6;
  static ::google::protobuf::internal::ExtensionIdentifier< ::Example::OsdPrimitive,
      ::google::protobuf::internal::MessageTypeTraits< ::Example::OsdLine >, 11, false >
    line;
  // @@protoc_insertion_point(class_scope:Example.OsdLine)
 private:
  void set_has_position2();
  void clear_has_position2();
  void set_has_weight();
  void clear_has_weight();
  void set_has_line_type();
  void clear_has_line_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::Example::Point* position2_;
  ::google::protobuf::int32 weight_;
  int line_type_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OsdRect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.OsdRect) */ {
 public:
  OsdRect();
  virtual ~OsdRect();

  OsdRect(const OsdRect& from);

  inline OsdRect& operator=(const OsdRect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OsdRect(OsdRect&& from) noexcept
    : OsdRect() {
    *this = ::std::move(from);
  }

  inline OsdRect& operator=(OsdRect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OsdRect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OsdRect* internal_default_instance() {
    return reinterpret_cast<const OsdRect*>(
               &_OsdRect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(OsdRect* other);
  friend void swap(OsdRect& a, OsdRect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OsdRect* New() const final {
    return CreateMaybeMessage<OsdRect>(NULL);
  }

  OsdRect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OsdRect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OsdRect& from);
  void MergeFrom(const OsdRect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OsdRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Example.Size size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  private:
  const ::Example::Size& _internal_size() const;
  public:
  const ::Example::Size& size() const;
  ::Example::Size* release_size();
  ::Example::Size* mutable_size();
  void set_allocated_size(::Example::Size* size);

  // required bool fill = 1;
  bool has_fill() const;
  void clear_fill();
  static const int kFillFieldNumber = 1;
  bool fill() const;
  void set_fill(bool value);

  static const int kRectFieldNumber = 7;
  static ::google::protobuf::internal::ExtensionIdentifier< ::Example::OsdPrimitive,
      ::google::protobuf::internal::MessageTypeTraits< ::Example::OsdRect >, 11, false >
    rect;
  // @@protoc_insertion_point(class_scope:Example.OsdRect)
 private:
  void set_has_fill();
  void clear_has_fill();
  void set_has_size();
  void clear_has_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::Example::Size* size_;
  bool fill_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OsdPrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Example.OsdPrimitive) */ {
 public:
  OsdPrimitive();
  virtual ~OsdPrimitive();

  OsdPrimitive(const OsdPrimitive& from);

  inline OsdPrimitive& operator=(const OsdPrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OsdPrimitive(OsdPrimitive&& from) noexcept
    : OsdPrimitive() {
    *this = ::std::move(from);
  }

  inline OsdPrimitive& operator=(OsdPrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OsdPrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OsdPrimitive* internal_default_instance() {
    return reinterpret_cast<const OsdPrimitive*>(
               &_OsdPrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(OsdPrimitive* other);
  friend void swap(OsdPrimitive& a, OsdPrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OsdPrimitive* New() const final {
    return CreateMaybeMessage<OsdPrimitive>(NULL);
  }

  OsdPrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OsdPrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OsdPrimitive& from);
  void MergeFrom(const OsdPrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OsdPrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Example.Point position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  private:
  const ::Example::Point& _internal_position() const;
  public:
  const ::Example::Point& position() const;
  ::Example::Point* release_position();
  ::Example::Point* mutable_position();
  void set_allocated_position(::Example::Point* position);

  // required .Example.PrimType prim_type = 1;
  bool has_prim_type() const;
  void clear_prim_type();
  static const int kPrimTypeFieldNumber = 1;
  ::Example::PrimType prim_type() const;
  void set_prim_type(::Example::PrimType value);

  // required .Example.Color color = 3;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 3;
  ::Example::Color color() const;
  void set_color(::Example::Color value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(OsdPrimitive)
  // @@protoc_insertion_point(class_scope:Example.OsdPrimitive)
 private:
  void set_has_prim_type();
  void clear_has_prim_type();
  void set_has_position();
  void clear_has_position();
  void set_has_color();
  void clear_has_color();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::Example::Point* position_;
  int prim_type_;
  int color_;
  friend struct ::protobuf_foo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PFoo

// repeated float z = 1;
inline int PFoo::z_size() const {
  return z_.size();
}
inline void PFoo::clear_z() {
  z_.Clear();
}
inline float PFoo::z(int index) const {
  // @@protoc_insertion_point(field_get:Example.PFoo.z)
  return z_.Get(index);
}
inline void PFoo::set_z(int index, float value) {
  z_.Set(index, value);
  // @@protoc_insertion_point(field_set:Example.PFoo.z)
}
inline void PFoo::add_z(float value) {
  z_.Add(value);
  // @@protoc_insertion_point(field_add:Example.PFoo.z)
}
inline const ::google::protobuf::RepeatedField< float >&
PFoo::z() const {
  // @@protoc_insertion_point(field_list:Example.PFoo.z)
  return z_;
}
inline ::google::protobuf::RepeatedField< float >*
PFoo::mutable_z() {
  // @@protoc_insertion_point(field_mutable_list:Example.PFoo.z)
  return &z_;
}

// -------------------------------------------------------------------

// OSDCanvas

// repeated .Example.OsdPrimitive primitives = 1;
inline int OSDCanvas::primitives_size() const {
  return primitives_.size();
}
inline void OSDCanvas::clear_primitives() {
  primitives_.Clear();
}
inline ::Example::OsdPrimitive* OSDCanvas::mutable_primitives(int index) {
  // @@protoc_insertion_point(field_mutable:Example.OSDCanvas.primitives)
  return primitives_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Example::OsdPrimitive >*
OSDCanvas::mutable_primitives() {
  // @@protoc_insertion_point(field_mutable_list:Example.OSDCanvas.primitives)
  return &primitives_;
}
inline const ::Example::OsdPrimitive& OSDCanvas::primitives(int index) const {
  // @@protoc_insertion_point(field_get:Example.OSDCanvas.primitives)
  return primitives_.Get(index);
}
inline ::Example::OsdPrimitive* OSDCanvas::add_primitives() {
  // @@protoc_insertion_point(field_add:Example.OSDCanvas.primitives)
  return primitives_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Example::OsdPrimitive >&
OSDCanvas::primitives() const {
  // @@protoc_insertion_point(field_list:Example.OSDCanvas.primitives)
  return primitives_;
}

// -------------------------------------------------------------------

// Point

// required int32 x = 1;
inline bool Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Point::x() const {
  // @@protoc_insertion_point(field_get:Example.Point.x)
  return x_;
}
inline void Point::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Example.Point.x)
}

// required int32 y = 2;
inline bool Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Point::y() const {
  // @@protoc_insertion_point(field_get:Example.Point.y)
  return y_;
}
inline void Point::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Example.Point.y)
}

// -------------------------------------------------------------------

// Size

// required int32 width = 1;
inline bool Size::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Size::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Size::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Size::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 Size::width() const {
  // @@protoc_insertion_point(field_get:Example.Size.width)
  return width_;
}
inline void Size::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:Example.Size.width)
}

// required int32 height = 2;
inline bool Size::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Size::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Size::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Size::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 Size::height() const {
  // @@protoc_insertion_point(field_get:Example.Size.height)
  return height_;
}
inline void Size::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:Example.Size.height)
}

// -------------------------------------------------------------------

// OsdString

// required string message = 1;
inline bool OsdString::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OsdString::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OsdString::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OsdString::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& OsdString::message() const {
  // @@protoc_insertion_point(field_get:Example.OsdString.message)
  return message_.GetNoArena();
}
inline void OsdString::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Example.OsdString.message)
}
#if LANG_CXX11
inline void OsdString::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Example.OsdString.message)
}
#endif
inline void OsdString::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Example.OsdString.message)
}
inline void OsdString::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Example.OsdString.message)
}
inline ::std::string* OsdString::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:Example.OsdString.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OsdString::release_message() {
  // @@protoc_insertion_point(field_release:Example.OsdString.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OsdString::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Example.OsdString.message)
}

// required int32 size = 2;
inline bool OsdString::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OsdString::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OsdString::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OsdString::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 OsdString::size() const {
  // @@protoc_insertion_point(field_get:Example.OsdString.size)
  return size_;
}
inline void OsdString::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Example.OsdString.size)
}

// -------------------------------------------------------------------

// OsdLine

// required .Example.Point position2 = 1;
inline bool OsdLine::has_position2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OsdLine::set_has_position2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OsdLine::clear_has_position2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OsdLine::clear_position2() {
  if (position2_ != NULL) position2_->Clear();
  clear_has_position2();
}
inline const ::Example::Point& OsdLine::_internal_position2() const {
  return *position2_;
}
inline const ::Example::Point& OsdLine::position2() const {
  const ::Example::Point* p = position2_;
  // @@protoc_insertion_point(field_get:Example.OsdLine.position2)
  return p != NULL ? *p : *reinterpret_cast<const ::Example::Point*>(
      &::Example::_Point_default_instance_);
}
inline ::Example::Point* OsdLine::release_position2() {
  // @@protoc_insertion_point(field_release:Example.OsdLine.position2)
  clear_has_position2();
  ::Example::Point* temp = position2_;
  position2_ = NULL;
  return temp;
}
inline ::Example::Point* OsdLine::mutable_position2() {
  set_has_position2();
  if (position2_ == NULL) {
    auto* p = CreateMaybeMessage<::Example::Point>(GetArenaNoVirtual());
    position2_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Example.OsdLine.position2)
  return position2_;
}
inline void OsdLine::set_allocated_position2(::Example::Point* position2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position2_;
  }
  if (position2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position2, submessage_arena);
    }
    set_has_position2();
  } else {
    clear_has_position2();
  }
  position2_ = position2;
  // @@protoc_insertion_point(field_set_allocated:Example.OsdLine.position2)
}

// required int32 weight = 2;
inline bool OsdLine::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OsdLine::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OsdLine::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OsdLine::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline ::google::protobuf::int32 OsdLine::weight() const {
  // @@protoc_insertion_point(field_get:Example.OsdLine.weight)
  return weight_;
}
inline void OsdLine::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:Example.OsdLine.weight)
}

// required .Example.LineType line_type = 3;
inline bool OsdLine::has_line_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OsdLine::set_has_line_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OsdLine::clear_has_line_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OsdLine::clear_line_type() {
  line_type_ = 0;
  clear_has_line_type();
}
inline ::Example::LineType OsdLine::line_type() const {
  // @@protoc_insertion_point(field_get:Example.OsdLine.line_type)
  return static_cast< ::Example::LineType >(line_type_);
}
inline void OsdLine::set_line_type(::Example::LineType value) {
  assert(::Example::LineType_IsValid(value));
  set_has_line_type();
  line_type_ = value;
  // @@protoc_insertion_point(field_set:Example.OsdLine.line_type)
}

// -------------------------------------------------------------------

// OsdRect

// required bool fill = 1;
inline bool OsdRect::has_fill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OsdRect::set_has_fill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OsdRect::clear_has_fill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OsdRect::clear_fill() {
  fill_ = false;
  clear_has_fill();
}
inline bool OsdRect::fill() const {
  // @@protoc_insertion_point(field_get:Example.OsdRect.fill)
  return fill_;
}
inline void OsdRect::set_fill(bool value) {
  set_has_fill();
  fill_ = value;
  // @@protoc_insertion_point(field_set:Example.OsdRect.fill)
}

// required .Example.Size size = 2;
inline bool OsdRect::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OsdRect::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OsdRect::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OsdRect::clear_size() {
  if (size_ != NULL) size_->Clear();
  clear_has_size();
}
inline const ::Example::Size& OsdRect::_internal_size() const {
  return *size_;
}
inline const ::Example::Size& OsdRect::size() const {
  const ::Example::Size* p = size_;
  // @@protoc_insertion_point(field_get:Example.OsdRect.size)
  return p != NULL ? *p : *reinterpret_cast<const ::Example::Size*>(
      &::Example::_Size_default_instance_);
}
inline ::Example::Size* OsdRect::release_size() {
  // @@protoc_insertion_point(field_release:Example.OsdRect.size)
  clear_has_size();
  ::Example::Size* temp = size_;
  size_ = NULL;
  return temp;
}
inline ::Example::Size* OsdRect::mutable_size() {
  set_has_size();
  if (size_ == NULL) {
    auto* p = CreateMaybeMessage<::Example::Size>(GetArenaNoVirtual());
    size_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Example.OsdRect.size)
  return size_;
}
inline void OsdRect::set_allocated_size(::Example::Size* size) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete size_;
  }
  if (size) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      size = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, size, submessage_arena);
    }
    set_has_size();
  } else {
    clear_has_size();
  }
  size_ = size;
  // @@protoc_insertion_point(field_set_allocated:Example.OsdRect.size)
}

// -------------------------------------------------------------------

// OsdPrimitive

// required .Example.PrimType prim_type = 1;
inline bool OsdPrimitive::has_prim_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OsdPrimitive::set_has_prim_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OsdPrimitive::clear_has_prim_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OsdPrimitive::clear_prim_type() {
  prim_type_ = 0;
  clear_has_prim_type();
}
inline ::Example::PrimType OsdPrimitive::prim_type() const {
  // @@protoc_insertion_point(field_get:Example.OsdPrimitive.prim_type)
  return static_cast< ::Example::PrimType >(prim_type_);
}
inline void OsdPrimitive::set_prim_type(::Example::PrimType value) {
  assert(::Example::PrimType_IsValid(value));
  set_has_prim_type();
  prim_type_ = value;
  // @@protoc_insertion_point(field_set:Example.OsdPrimitive.prim_type)
}

// required .Example.Point position = 2;
inline bool OsdPrimitive::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OsdPrimitive::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OsdPrimitive::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OsdPrimitive::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
inline const ::Example::Point& OsdPrimitive::_internal_position() const {
  return *position_;
}
inline const ::Example::Point& OsdPrimitive::position() const {
  const ::Example::Point* p = position_;
  // @@protoc_insertion_point(field_get:Example.OsdPrimitive.position)
  return p != NULL ? *p : *reinterpret_cast<const ::Example::Point*>(
      &::Example::_Point_default_instance_);
}
inline ::Example::Point* OsdPrimitive::release_position() {
  // @@protoc_insertion_point(field_release:Example.OsdPrimitive.position)
  clear_has_position();
  ::Example::Point* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::Example::Point* OsdPrimitive::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::Example::Point>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Example.OsdPrimitive.position)
  return position_;
}
inline void OsdPrimitive::set_allocated_position(::Example::Point* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    set_has_position();
  } else {
    clear_has_position();
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:Example.OsdPrimitive.position)
}

// required .Example.Color color = 3;
inline bool OsdPrimitive::has_color() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OsdPrimitive::set_has_color() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OsdPrimitive::clear_has_color() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OsdPrimitive::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::Example::Color OsdPrimitive::color() const {
  // @@protoc_insertion_point(field_get:Example.OsdPrimitive.color)
  return static_cast< ::Example::Color >(color_);
}
inline void OsdPrimitive::set_color(::Example::Color value) {
  assert(::Example::Color_IsValid(value));
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:Example.OsdPrimitive.color)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Example

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Example::PrimType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Example::PrimType>() {
  return ::Example::PrimType_descriptor();
}
template <> struct is_proto_enum< ::Example::Color> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Example::Color>() {
  return ::Example::Color_descriptor();
}
template <> struct is_proto_enum< ::Example::LineType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Example::LineType>() {
  return ::Example::LineType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_foo_2eproto
